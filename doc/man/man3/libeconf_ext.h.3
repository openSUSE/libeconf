.TH "include/libeconf_ext.h" 3 "Wed Mar 24 2021" "Version 0.4.0" "libeconf" \" -*- nroff -*-
.ad l
.nh
.SH NAME
include/libeconf_ext.h \- Public extended API for the econf library\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdbool\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include 'libeconf\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBeconf_ext_value\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBeconf_ext_value\fP \fBeconf_ext_value\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBeconf_err\fP \fBeconf_getExtValue\fP (\fBeconf_file\fP *kf, const char *group, const char *key, \fBeconf_ext_value\fP **result)"
.br
.RI "Evaluating more information for given group/key\&. "
.ti -1c
.RI "void \fBeconf_freeExtValue\fP (\fBeconf_ext_value\fP *to_free)"
.br
.RI "Free an complete \fBeconf_ext_value\fP struct\&. "
.in -1c
.SH "Detailed Description"
.PP 
Public extended API for the econf library\&. 


.PP
Definition in file \fBlibeconf_ext\&.h\fP\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBeconf_ext_value\fP \fBeconf_ext_value\fP"

.PP
Definition at line 45 of file libeconf_ext\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBeconf_err\fP econf_getExtValue (\fBeconf_file\fP * kf, const char * group, const char * key, \fBeconf_ext_value\fP ** result)"

.PP
Evaluating more information for given group/key\&. 
.PP
\fBParameters:\fP
.RS 4
\fIkf\fP given/parsed data 
.br
\fIgroup\fP Desired group or NULL if there is no group defined\&. 
.br
\fIkey\fP Key for which the value is requested\&. 
.br
\fIresult\fP A newly allocated struct or NULL in error case\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
econf_err ECONF_SUCCESS or error code 
.RE
.PP

.SS "void econf_freeExtValue (\fBeconf_ext_value\fP * to_free)"

.PP
Free an complete \fBeconf_ext_value\fP struct\&. 
.PP
\fBParameters:\fP
.RS 4
\fIto_free\fP struct which has to be freed 
.RE
.PP
\fBReturns:\fP
.RS 4
void 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for libeconf from the source code\&.
